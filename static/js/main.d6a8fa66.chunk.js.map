{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","console","log","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Overview","styled","div","PriceBlock","li","PriceTitle","PriceChange","span","props","isPositive","Price","price24h","quotes","USD","percent_change_24h","price7d","percent_change_7d","abs","last_updated","Title","h1","accentColor","Loader","Container","Header","header","Back","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","cardBgColor","Img","img","Coins","slice","coin","pathname","id","src","Router","basename","process","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","Button","App","setDarkAtom","useSetRecoilState","onClick","prev","className","htmlFor","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.d6a8fa66.chunk.js","sourcesContent":["import { start } from \"repl\";\n\nconst BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 22;\n  console.log(startDate);\n  console.log(endDate);\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close) ?? [],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinHistory, fetchCoinTickers } from \"../api\";\nconst Overview = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 200px;\n  padding: 35px;\n  justify-content: space-between;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nconst PriceBlock = styled.li`\n  padding: 5px;\n  color: #d7d7d7;\n`;\nconst PriceTitle = styled(PriceBlock)`\n  font-size: 1.2em;\n  font-weight: 1.2;\n  color: white;\n`;\n\nconst PriceChange = styled.span<{ isPositive: boolean }>`\n  color: ${(props) => (props.isPositive ? \"green\" : \"red\")};\n`;\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IPriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IPriceData>(\n    [\"price\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  const price24h = data?.quotes.USD.percent_change_24h;\n  const price7d = data?.quotes.USD.percent_change_7d;\n  return (\n    <Overview>\n      <ul>\n        <PriceTitle>\n          Current Price: $ {data?.quotes.USD.price.toFixed(2)}\n        </PriceTitle>\n        <PriceBlock>\n          24h% :\n          <PriceChange isPositive={price24h ? price24h > 0 : false}>\n            {price24h\n              ? price24h > 0\n                ? \" ▲ \" + Math.abs(price24h)\n                : \" ▼ \" + Math.abs(price24h)\n              : \"\"}\n            %\n          </PriceChange>\n        </PriceBlock>\n        <PriceBlock>\n          7d% :\n          <PriceChange isPositive={price7d ? price7d > 0 : false}>\n            {price7d\n              ? price7d > 0\n                ? \" ▲ \" + Math.abs(price7d)\n                : \" ▼ \" + Math.abs(price7d)\n              : \"\"}\n            %\n          </PriceChange>\n        </PriceBlock>\n        <PriceBlock>Last updated at {data?.last_updated}</PriceBlock>\n      </ul>\n    </Overview>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst Back = styled(Overview)`\n  margin-top: 43px;\n  width: 100px;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  console.log(tickersData);\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Back>\n        <Link to=\"/\">Back</Link>\n      </Back>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(2)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 15px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\ninterface ICoinsProps {}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>CoinTracker</title>\n      </Helmet>\n\n      <Header>\n        <Title>CoinTracker</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id}.png`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst Button = styled.div`\n  display: absolute;\n  justigy-content: center;\n  align-items: center;\n  margin-top: 50px;\n  margin-left: 890px;\n  position: absolute;\n  .checkbox {\n    opacity: 0;\n    position: absolute;\n  }\n\n  .label {\n    width: 50px;\n    height: 26px;\n\n    background-color: transparent;\n    border: solid 1px ${(props) => props.theme.accentColor};\n    display: flex;\n    justify-content: space-between;\n    border-radius: 50px;\n    padding: 5px;\n    align-items: center;\n    position: relative;\n  }\n  .ball {\n    width: 22px;\n    height: 22px;\n    background-color: ${(props) => props.theme.accentColor};\n    position: absolute;\n    left: 1px;\n    top: 1px;\n    cursor: pointer;\n    border-radius: 50%;\n    transition: transform 0.2s linear;\n  }\n  .checkbox:checked + .label .ball {\n    transform: translateX(24px);\n  }\n  .fa-moon {\n    color: #f1c40f;\n  }\n  .fa-sun {\n    color: #f39c12;\n  }\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Button>\n          <input\n            onClick={toggleDarkAtom}\n            type=\"checkbox\"\n            className=\"checkbox\"\n            id=\"checkbox\"\n          />\n          <label htmlFor=\"checkbox\" className=\"label\">\n            <i className=\"fas fa-sun\"></i>\n            <i className=\"fas fa-moon\"></i>\n\n            <div className=\"ball\"></div>\n          </label>\n        </Button>\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}